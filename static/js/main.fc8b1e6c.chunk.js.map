{"version":3,"sources":["images/unknown-album.jpg","blocks/AlbumBar/index.jsx","blocks/AlbumForm/AddButton.jsx","blocks/AlbumForm/TextInput.jsx","blocks/AlbumForm/AlbumInput.jsx","blocks/AlbumForm/ArtistInput.jsx","blocks/AlbumForm/Content.jsx","blocks/AlbumForm/index.jsx","models/AlbumModel.js","components/AlbumBuilder.jsx","containers/AlbumCreator.jsx","blocks/AlbumList/index.jsx","blocks/AlbumCard/Details.jsx","blocks/AlbumCard/Content.jsx","blocks/AlbumCard/Title.jsx","blocks/AlbumCard/Subtitle.jsx","blocks/AlbumCard/Actions.jsx","blocks/AlbumCard/Media.jsx","blocks/AlbumCard/index.jsx","components/AlbumView.jsx","containers/AlbumGroup.jsx","blocks/OrderSelect/SelectInput.jsx","blocks/OrderSelect/OrderInput.jsx","blocks/OrderSelect/SelectItem.jsx","blocks/OrderSelect/index.jsx","models/AlbumOrderModel.js","components/AlbumOrderSelect.jsx","containers/AlbumOrder.jsx","stores/AlbumStore.js","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","AlbumBar","styled","_ref","name","props","Object","objectWithoutProperties","react","AppBar_default","a","assign","position","color","Toolbar_default","Typography_default","variant","_templateObject","AddButton","esm_extends","index_es","aria-label","type","Add_default","AddButton_templateObject","TextInput","margin","TextInput_templateObject","AlbumInput","AlbumForm_TextInput","label","AlbumInput_templateObject","ArtistInput","ArtistInput_templateObject","Content","div","Content_templateObject","AlbumForm","form","AlbumForm_templateObject","AlbumModel","artist","dateAdded","arguments","length","undefined","Date","classCallCheck","this","id","generateId","nextId","initialState","AlbumBuilder","_this","possibleConstructorReturn","getPrototypeOf","call","state","handleTextInputChange","bind","assertThisInitialized","handleFormSubmit","e","setState","defineProperty","target","value","preventDefault","onSubmit","blocks_AlbumForm","data-test","onChange","React","AlbumCreator","handleSubmit","album","albumStore","add","components_AlbumBuilder","inject","observer","AlbumList","AlbumList_templateObject","Details","Details_templateObject","CardContent","AlbumCard_Content_templateObject","Title","component","Title_templateObject","Subtitle","Subtitle_templateObject","Actions","CardActions_default","disableActionSpacing","Actions_templateObject","Media","CardMedia","Media_templateObject","AlbumCard","Card","AlbumCard_templateObject","AlbumView","localeDate","toLocaleString","blocks_AlbumCard","image","uknownAlbumImage","title","AlbumGroup","blocks_AlbumList","sortedAlbums","map","components_AlbumView","key","SelectInput","htmlFor","SelectInput_templateObject","OrderInput","OrderSelect_SelectInput","inputProps","OrderInput_templateObject","SelectItem","MenuItem_default","SelectItem_templateObject","OrderSelect","OrderSelect_templateObject","AlbumOrderModel","byDate","byName","byArtist","AlbumOrderSelect","handleOrderSelect","onChangeOrder","blocks_OrderSelect","order","AlbumOrder","handleChangeOrder","sortOrder","components_AlbumOrderSelect","AlbumStore","albums","push","item","foundIndex","findIndex","filter","slice","sort","b","field","getTime","localeCompare","decorate","observable","computed","action","editAlbum","deleteAlbum","theme","createMuiTheme","typography","useNextVariants","GlobalStyle","createGlobalStyle","App_templateObject","StyledContentDiv","_templateObject2","stores","App","styled_components_browser_esm","index_module","blocks_AlbumBar","containers_AlbumCreator","containers_AlbumOrder","containers_AlbumGroup","Boolean","window","location","hostname","match","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fc8b1e6c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/unknown-album.6fa93efd.jpg\";","import AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport * as React from 'react';\nimport styled from 'styled-components';\n\nconst AlbumBar = styled(({ name, ...props }) => (\n  <AppBar position=\"fixed\" color=\"primary\" {...props}>\n    <Toolbar>\n      <Typography variant=\"h6\" color=\"inherit\">\n        {name}\n      </Typography>\n    </Toolbar>\n  </AppBar>\n))`\n  && {\n    flex-grow: 1;\n  }\n`;\n\nexport default AlbumBar;\n","import { Fab } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport * as React from 'react';\nimport styled from 'styled-components';\n\nconst AddButton = styled(({ ...props }) => (\n  <Fab color=\"primary\" aria-label=\"Add\" type=\"submit\" {...props}>\n    <AddIcon />\n  </Fab>\n))`\n  && {\n    flex: 0 0 auto;\n    max-width: 40px;\n    max-height: 40px;\n  }\n`;\n\nexport default AddButton;\n","import { FormControl, TextField } from '@material-ui/core';\nimport * as React from 'react';\nimport styled from 'styled-components';\n\nconst TextInput = styled(({ ...props }) => (\n  <FormControl>\n    <TextField margin=\"normal\" {...props} />\n  </FormControl>\n))`\n  && {\n    flex: 1 1 auto;\n  }\n`;\n\nexport default TextInput;\n","import * as React from 'react';\nimport styled from 'styled-components';\n\nimport TextInput from './TextInput';\n\nconst AlbumInput = styled(({ ...props }) => (\n  <TextInput label={'Album 💿'} name={'name'} {...props} />\n))``;\n\nexport default AlbumInput;\n","import * as React from 'react';\nimport styled from 'styled-components';\n\nimport TextInput from './TextInput';\n\nconst ArtistInput = styled(({ ...props }) => (\n  <TextInput label={'Artist 🎸'} name={'artist'} {...props} />\n))``;\n\nexport default ArtistInput;\n","import styled from 'styled-components';\n\nconst Content = styled.div`\n  && {\n    display: flex;\n    flex-direction: row;\n    align-content: stretch;\n    align-items: center;\n\n    /* childs margin */\n    & > * {\n      margin: 12px;\n    }\n  }\n`;\n\nexport default Content;\n","import styled from 'styled-components';\n\nimport AddButton from './AddButton';\nimport AlbumInput from './AlbumInput';\nimport ArtistInput from './ArtistInput';\nimport Content from './Content';\nimport TextInput from './TextInput';\n\nconst AlbumForm = styled.form``;\n\nAlbumForm.Content = Content;\nAlbumForm.TextInput = TextInput;\nAlbumForm.ArtistInput = ArtistInput;\nAlbumForm.AlbumInput = AlbumInput;\nAlbumForm.AddButton = AddButton;\n\nexport default AlbumForm;\n","class AlbumModel {\n  constructor(artist, name, dateAdded = new Date()) {\n    this.id = AlbumModel.generateId();\n    this.artist = artist;\n    this.name = name;\n    this.dateAdded = dateAdded;\n  }\n\n  static nextId = 1;\n  static generateId() {\n    return this.nextId++;\n  }\n}\n\nexport default AlbumModel;\n","import * as React from 'react';\n\nimport AlbumForm from '../blocks/AlbumForm';\nimport AlbumModel from '../models/AlbumModel';\n\nconst initialState = {\n  artist: '',\n  name: ''\n};\n\nclass AlbumBuilder extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n\n    this.handleTextInputChange = this.handleTextInputChange.bind(this);\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n  }\n\n  handleTextInputChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  handleFormSubmit(e) {\n    e.preventDefault();\n    this.props.onSubmit(new AlbumModel(this.state.artist, this.state.name));\n    this.setState(initialState);\n  }\n\n  render() {\n    return (\n      <AlbumForm\n        onSubmit={this.handleFormSubmit}\n        data-test=\"album-builder-form\">\n        <AlbumForm.Content>\n          <AlbumForm.ArtistInput\n            value={this.state.artist}\n            onChange={this.handleTextInputChange}\n            data-test=\"album-builder-artist-input\"\n          />\n          <AlbumForm.AlbumInput\n            value={this.state.name}\n            onChange={this.handleTextInputChange}\n            data-test=\"album-builder-album-input\"\n          />\n          <AlbumForm.AddButton />\n        </AlbumForm.Content>\n      </AlbumForm>\n    );\n  }\n}\n\nexport default AlbumBuilder;\n","import { inject, observer } from 'mobx-react';\nimport * as React from 'react';\n\nimport AlbumBuilder from '../components/AlbumBuilder';\n\nclass AlbumCreator extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(album) {\n    this.props.albumStore.add(album);\n  }\n\n  render() {\n    return <AlbumBuilder onSubmit={this.handleSubmit} />;\n  }\n}\n\nexport default inject('albumStore')(observer(AlbumCreator));\n","import styled from 'styled-components';\n\nconst AlbumList = styled.div`\n  && {\n    display: flex;\n    flex-wrap: wrap;\n    padding: 24px;\n\n    /* childs */\n    & > * {\n      margin: 12px;\n    }\n  }\n`;\n\nexport default AlbumList;\n","import styled from 'styled-components';\n\nconst Details = styled.div`\n  && {\n    display: flex;\n    flex-direction: column;\n    flex: 1 1 auto;\n  }\n`;\n\nexport default Details;\n","import styled from 'styled-components';\nimport CardContent from '@material-ui/core/CardContent';\n\nconst Content = styled(CardContent)`\n  && {\n    flex: 1 0 auto;\n  }\n`;\n\nexport default Content;\n","import * as React from 'react';\nimport styled from 'styled-components';\n\nimport Typography from '@material-ui/core/Typography';\n\nconst Title = styled(({ ...props }) => (\n  <Typography variant=\"h5\" component=\"h5\" {...props} />\n))``;\n\nexport default Title;\n","import * as React from 'react';\nimport styled from 'styled-components';\n\nimport Typography from '@material-ui/core/Typography';\n\nconst Subtitle = styled(({ ...props }) => (\n  <Typography variant=\"subtitle1\" color=\"textSecondary\" {...props} />\n))``;\n\nexport default Subtitle;\n","import * as React from 'react';\nimport styled from 'styled-components';\n\nimport CardActions from '@material-ui/core/CardActions';\n\nconst Actions = styled(({ ...props }) => (\n  <CardActions disableActionSpacing={true} {...props} />\n))``;\n\nexport default Actions;\n","import CardMedia from '@material-ui/core/CardMedia';\nimport styled from 'styled-components';\n\nconst Media = styled(CardMedia)`\n  && {\n    flex: 0 0 auto;\n    align-self: center;\n    width: 151px;\n    height: 151px;\n  }\n`;\n\nexport default Media;\n","import styled from 'styled-components';\nimport Card from '@material-ui/core/Card';\n\nimport Details from './Details';\nimport Content from './Content';\nimport Title from './Title';\nimport Subtitle from './Subtitle';\nimport Actions from './Actions';\nimport Media from './Media';\n\nconst AlbumCard = styled(Card)`\n  && {\n    display: flex;\n    min-width: 20%;\n  }\n`;\n\nAlbumCard.Details = Details;\nAlbumCard.Content = Content;\nAlbumCard.Title = Title;\nAlbumCard.Subtitle = Subtitle;\nAlbumCard.Actions = Actions;\nAlbumCard.Media = Media;\n\nexport default AlbumCard;\n","import { observer } from 'mobx-react';\nimport * as React from 'react';\n\nimport AlbumCard from '../blocks/AlbumCard';\nimport uknownAlbumImage from '../images/unknown-album.jpg';\n\nclass AlbumView extends React.Component {\n  render() {\n    const localeDate = this.props.album.dateAdded\n      ? this.props.album.dateAdded.toLocaleString()\n      : '';\n    return (\n      <AlbumCard data-test=\"album-view\">\n        <AlbumCard.Details>\n          <AlbumCard.Content>\n            <AlbumCard.Title data-test=\"album-view-name\">\n              {this.props.album.name}\n            </AlbumCard.Title>\n            <AlbumCard.Subtitle data-test=\"album-view-artist\">\n              {this.props.album.artist}\n            </AlbumCard.Subtitle>\n            <small data-test=\"album-view-date\">{localeDate}</small>\n          </AlbumCard.Content>\n          <AlbumCard.Actions>\n            {/*<IconButton color=\"default\">\n              {this.props.showFavorite && <FavoriteIcon />}\n            </IconButton>*/}\n          </AlbumCard.Actions>\n        </AlbumCard.Details>\n        <AlbumCard.Media image={uknownAlbumImage} title=\"Album cover\" />\n      </AlbumCard>\n    );\n  }\n}\n\nexport default observer(AlbumView);\n","import { inject, observer } from 'mobx-react';\nimport * as React from 'react';\n\nimport AlbumList from '../blocks/AlbumList';\nimport AlbumView from '../components/AlbumView';\n\nclass AlbumGroup extends React.Component {\n  render() {\n    return (\n      <AlbumList data-test=\"album-group-list\">\n        {this.props.albumStore.sortedAlbums.map((album) => (\n          <AlbumView album={album} key={album.id} />\n        ))}\n      </AlbumList>\n    );\n  }\n}\n\nexport default inject('albumStore')(observer(AlbumGroup));\n","import { FormControl, InputLabel, Select } from '@material-ui/core';\nimport * as React from 'react';\nimport styled from 'styled-components';\n\nconst SelectInput = styled(({ label, htmlFor, ...props }) => (\n  <FormControl>\n    <InputLabel htmlFor={htmlFor}>{label}</InputLabel>\n    <Select {...props} />\n  </FormControl>\n))``;\n\nexport default SelectInput;\n","import * as React from 'react';\nimport styled from 'styled-components';\n\nimport SelectInput from './SelectInput';\n\nconst OrderInput = styled(({ value, ...props }) => (\n  <SelectInput\n    label={'Order 🔝'}\n    htmlFor={'order'}\n    value={value || ''}\n    inputProps={{\n      name: 'order'\n    }}\n    {...props}\n  />\n))``;\n\nexport default OrderInput;\n","import MenuItem from '@material-ui/core/MenuItem';\nimport * as React from 'react';\nimport styled from 'styled-components';\n\nconst SelectItem = styled(({ ...props }) => <MenuItem {...props} />)``;\n\nexport default SelectItem;\n","import styled from 'styled-components';\n\nimport OrderInput from './OrderInput';\nimport SelectInput from './SelectInput';\nimport SelectItem from './SelectItem';\n\nconst OrderSelect = styled.form`\n  && {\n    display: flex;\n    align-content: stretch;\n    align-items: center;\n\n    /* childs margin */\n    & > * {\n      margin: 12px;\n    }\n  }\n`;\n\nOrderSelect.SelectInput = SelectInput;\nOrderSelect.OrderInput = OrderInput;\nOrderSelect.SelectItem = SelectItem;\n\nexport default OrderSelect;\n","const AlbumOrderModel = {\n  byDate: 'dateAdded',\n  byName: 'name',\n  byArtist: 'artist'\n};\n\nexport default AlbumOrderModel;\n","import * as React from 'react';\n\nimport OrderSelect from '../blocks/OrderSelect';\nimport AlbumOrderModel from '../models/AlbumOrderModel';\n\nclass AlbumOrderSelect extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleOrderSelect = this.handleOrderSelect.bind(this);\n  }\n\n  handleOrderSelect(e) {\n    this.props.onChangeOrder(e.target.value);\n  }\n\n  render() {\n    return (\n      <OrderSelect data-test=\"album-order-select\">\n        <OrderSelect.OrderInput\n          value={this.props.order}\n          onChange={this.handleOrderSelect}>\n          <OrderSelect.SelectItem value={AlbumOrderModel.byDate}>\n            By Date\n          </OrderSelect.SelectItem>\n          <OrderSelect.SelectItem value={AlbumOrderModel.byName}>\n            By Album\n          </OrderSelect.SelectItem>\n          <OrderSelect.SelectItem value={AlbumOrderModel.byArtist}>\n            By Artist\n          </OrderSelect.SelectItem>\n        </OrderSelect.OrderInput>\n      </OrderSelect>\n    );\n  }\n}\n\nexport default AlbumOrderSelect;\n","import { inject, observer } from 'mobx-react';\nimport * as React from 'react';\n\nimport AlbumOrderSelect from '../components/AlbumOrderSelect';\n\nclass AlbumOrder extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChangeOrder = this.handleChangeOrder.bind(this);\n  }\n\n  handleChangeOrder(order) {\n    this.props.albumStore.sortOrder = order;\n  }\n\n  render() {\n    const { sortOrder } = this.props.albumStore;\n\n    return (\n      <AlbumOrderSelect\n        order={sortOrder}\n        onChangeOrder={this.handleChangeOrder}\n      />\n    );\n  }\n}\n\nexport default inject('albumStore')(observer(AlbumOrder));\n","import { action, computed, decorate, observable } from 'mobx';\n\nimport AlbumOrderModel from '../models/AlbumOrderModel';\n\nclass AlbumStore {\n  albums = [];\n  sortOrder = AlbumOrderModel.byDate;\n\n  get sortedAlbums() {\n    return this.albums.slice().sort((a, b) => {\n      const field = this.sortOrder;\n\n      if (field === AlbumOrderModel.byDate) {\n        return a[field].getTime() - b[field].getTime();\n      }\n\n      return a[field].localeCompare(b[field]);\n    });\n  }\n\n  add(album) {\n    this.albums.push(album);\n  }\n\n  editAlbum(item) {\n    let foundIndex = this.albums.findIndex((album) => album.id === item.id);\n    if (foundIndex > -1) {\n      this.albums[foundIndex] = item;\n    }\n  }\n\n  deleteAlbum(item) {\n    this.albums = this.albums.filter((album) => album.id !== item.id);\n  }\n}\n\ndecorate(AlbumStore, {\n  albums: observable,\n  sortOrder: observable,\n  sortedAlbums: computed,\n  add: action,\n  editAlbum: action,\n  deleteAlbum: action\n});\n\nexport default AlbumStore;\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport { Provider as StoreProvider } from 'mobx-react';\nimport * as React from 'react';\nimport styled, { createGlobalStyle, ThemeProvider } from 'styled-components';\n\nimport AlbumBar from './blocks/AlbumBar';\nimport AlbumCreator from './containers/AlbumCreator';\nimport AlbumGroup from './containers/AlbumGroup';\nimport AlbumOrder from './containers/AlbumOrder';\nimport AlbumStore from './stores/AlbumStore';\n\n// https://material-ui.com/customization/themes\n// https://www.styled-components.com/docs/advanced#theming\nconst theme = createMuiTheme({\n  typography: {\n    useNextVariants: true\n  }\n});\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    padding: 0;\n    font-family: Roboto, -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Oxygen',\n      'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n      sans-serif;\n  }\n  code {\n    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;\n  }\n`;\n\nconst StyledContentDiv = styled.div`\n  && {\n    margin-top: 64px; /* Bar height */\n  }\n`;\n\nconst stores = { albumStore: new AlbumStore() };\n\nclass App extends React.Component {\n  render() {\n    return (\n      <ThemeProvider theme={theme}>\n        <StoreProvider {...stores}>\n          <>\n            <AlbumBar name=\"My Fav Albums\" data-test=\"album-bar\" />\n            <StyledContentDiv>\n              <AlbumCreator />\n              <AlbumOrder />\n              <AlbumGroup data-test=\"album-group\" />\n            </StyledContentDiv>\n            <GlobalStyle />\n          </>\n        </StoreProvider>\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from 'react';\nimport { render } from 'react-dom';\n\nimport AlbumApp from './App';\nimport * as serviceWorker from './serviceWorker';\n\nrender(<AlbumApp />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}